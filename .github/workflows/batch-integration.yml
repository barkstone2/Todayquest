name: 배치 애플리케이션 테스트 & 통합

on:
  pull_request:
    branches: [ develop ]
    paths-ignore: [
      'web/**',
      '.github/workflows/web-*.yml'
    ]
env:
  JAVA_PATH: /home/runner/jdk
  GRADLE_USER_HOME: /home/runner/gradle

jobs:
  gradle-test:
    name: 그래들 테스트
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: dailyquest_test
          MYSQL_USER: sa
          MYSQL_PASSWORD: sa
        ports:
          - 3306:3306
    steps:
      - name: 리포지토리 체크아웃
        uses: actions/checkout@v3
      - id: jdk-install
        name: 자바 설치
        run: |
          mkdir -p ${{ env.JAVA_PATH }}
          wget -q https://corretto.aws/downloads/latest/amazon-corretto-17-x64-linux-jdk.tar.gz
          tar -xzvf *-jdk.tar.gz -C ${{ env.JAVA_PATH }}
      - name: 자바 환경변수 세팅
        run: |
          echo "JAVA_HOME=$(find ${{ env.JAVA_PATH }} -type d -name '*corretto-17*')" >> $GITHUB_ENV
      - name: 오픈서치 인증서 세팅
        run: |
          keytool -import -v -deststorepass changeit -destkeystore $JAVA_HOME/lib/security/cacerts -file cert/opensearch-default-ca.pem -noprompt | true
      - name: 그래들 테스트
        run: |
          ./gradlew batch:test

  fail-slack-message:
    name: 파이프라인 실패 알림
    runs-on: ubuntu-latest
    needs: gradle-test
    if: failure()
    steps:
      - name: 실패 메시지 가공
        id: create-message
        run: |
          MESSAGE=$(echo "${{ github.event.head_commit.message }}" | head -n 1)
          echo "fail_message=$MESSAGE" >> "$GITHUB_OUTPUT"
      - name: 슬랙 메시지 전송
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "<!channel> ❗️[${{ github.workflow }}] Failure: For \"${{ steps.create-message.outputs.fail_message }}\""
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}